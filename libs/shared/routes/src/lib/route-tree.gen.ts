// This file is auto-generated by TanStack Router
// Import Routes
import { Route as rootRoute } from './routes/__root'
import { Route as OrganizationsOrganizationIdClustersClusterIdLogsImport } from './routes/organizations/$organizationId/clusters/$clusterId/_logs'
import { Route as OrganizationsOrganizationIdClustersClusterIdLogsIndexImport } from './routes/organizations/$organizationId/clusters/$clusterId/_logs/index'

// Create/Update Routes

const OrganizationsOrganizationIdClustersClusterIdLogsRoute =
  OrganizationsOrganizationIdClustersClusterIdLogsImport.update({
    path: '/organizations/$organizationId/clusters/$clusterId/logs',
    getParentRoute: () => rootRoute,
  } as any)

const OrganizationsOrganizationIdClustersClusterIdLogsIndexRoute =
  OrganizationsOrganizationIdClustersClusterIdLogsIndexImport.update({
    path: '/',
    getParentRoute: () => OrganizationsOrganizationIdClustersClusterIdLogsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/organizations/$organizationId/clusters/$clusterId/_logs': {
      preLoaderRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/clusters/$clusterId/_logs/': {
      preLoaderRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsIndexImport
      parentRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  OrganizationsOrganizationIdClustersClusterIdLogsRoute.addChildren([
    OrganizationsOrganizationIdClustersClusterIdLogsIndexRoute,
  ]),
])
