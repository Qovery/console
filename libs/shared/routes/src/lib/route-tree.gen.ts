/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file is auto-generated by TanStack Router
import { createFileRoute } from '@tanstack/react-router'
// Import Routes
import { Route as rootRoute } from './routes/__root'
import { Route as OrganizationsOrganizationIdClustersClusterIdLogsImport } from './routes/organizations/$organizationId/clusters/$clusterId/_logs'
import { Route as OrganizationsOrganizationIdClustersClusterIdLogsIndexImport } from './routes/organizations/$organizationId/clusters/$clusterId/_logs/index'
import { Route as OrganizationsOrganizationIdClustersClusterIdLogsLogsImport } from './routes/organizations/$organizationId/clusters/$clusterId/_logs/logs'

// Create Virtual Routes

const OrganizationsOrganizationIdClustersClusterIdImport = createFileRoute(
  '/organizations/$organizationId/clusters/$clusterId'
)()

// Create/Update Routes

const OrganizationsOrganizationIdClustersClusterIdRoute = OrganizationsOrganizationIdClustersClusterIdImport.update({
  path: '/organizations/$organizationId/clusters/$clusterId',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationsOrganizationIdClustersClusterIdLogsRoute =
  OrganizationsOrganizationIdClustersClusterIdLogsImport.update({
    id: '/_logs',
    getParentRoute: () => OrganizationsOrganizationIdClustersClusterIdRoute,
  } as any)

const OrganizationsOrganizationIdClustersClusterIdLogsIndexRoute =
  OrganizationsOrganizationIdClustersClusterIdLogsIndexImport.update({
    path: '/',
    getParentRoute: () => OrganizationsOrganizationIdClustersClusterIdLogsRoute,
  } as any)

const OrganizationsOrganizationIdClustersClusterIdLogsLogsRoute =
  OrganizationsOrganizationIdClustersClusterIdLogsLogsImport.update({
    path: '/logs',
    getParentRoute: () => OrganizationsOrganizationIdClustersClusterIdLogsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/organizations/$organizationId/clusters/$clusterId': {
      id: '/organizations/$organizationId/clusters/$clusterId'
      path: '/organizations/$organizationId/clusters/$clusterId'
      fullPath: '/organizations/$organizationId/clusters/$clusterId'
      preLoaderRoute: typeof OrganizationsOrganizationIdClustersClusterIdImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/clusters/$clusterId/_logs': {
      id: '/organizations/$organizationId/clusters/$clusterId/_logs'
      path: '/organizations/$organizationId/clusters/$clusterId'
      fullPath: '/organizations/$organizationId/clusters/$clusterId'
      preLoaderRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsImport
      parentRoute: typeof OrganizationsOrganizationIdClustersClusterIdRoute
    }
    '/organizations/$organizationId/clusters/$clusterId/_logs/logs': {
      id: '/organizations/$organizationId/clusters/$clusterId/_logs/logs'
      path: '/logs'
      fullPath: '/organizations/$organizationId/clusters/$clusterId/logs'
      preLoaderRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsLogsImport
      parentRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsImport
    }
    '/organizations/$organizationId/clusters/$clusterId/_logs/': {
      id: '/organizations/$organizationId/clusters/$clusterId/_logs/'
      path: '/'
      fullPath: '/organizations/$organizationId/clusters/$clusterId/'
      preLoaderRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsIndexImport
      parentRoute: typeof OrganizationsOrganizationIdClustersClusterIdLogsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  OrganizationsOrganizationIdClustersClusterIdRoute: OrganizationsOrganizationIdClustersClusterIdRoute.addChildren({
    OrganizationsOrganizationIdClustersClusterIdLogsRoute:
      OrganizationsOrganizationIdClustersClusterIdLogsRoute.addChildren({
        OrganizationsOrganizationIdClustersClusterIdLogsLogsRoute,
        OrganizationsOrganizationIdClustersClusterIdLogsIndexRoute,
      }),
  }),
})

/* prettier-ignore-end */
