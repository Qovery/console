---
description: Pre-commit verification workflow and quality checks
globs: []
alwaysApply: false
---

# Pre-commit Verification Workflow

## Commit Message Format

This project uses **semantic-release** with conventional commit format:

### Format Structure

```
<type>(<scope>): <description>

[optional body]

[optional footer(s)]
```

### Examples

```bash
# Features
feat(button): add loading state animation
feat(auth): implement OAuth2 login flow

# Bug fixes
fix(modal): prevent background scroll when open
fix(api): handle network timeout errors

# Other types
docs(readme): update installation instructions
style(header): improve responsive layout
refactor(utils): simplify date formatting function
test(user-service): add integration tests
chore(deps): update react to v18.2.0
```

### Required Types

- **feat**: New feature
- **fix**: Bug fix
- **docs**: Documentation changes
- **style**: Code style changes (formatting, etc.)
- **refactor**: Code refactoring
- **test**: Adding or updating tests
- **chore**: Maintenance tasks, dependency updates

### Scope Guidelines

- Use component name: `button`, `modal`, `header`
- Use feature area: `auth`, `api`, `routing`
- Use domain: `user-management`, `billing`

## Required Checks Before Commit

### 1. Format Check

```bash
npx nx format:check
```

If failed: Run `npx nx format:write` to fix formatting

### 2. Tests

```bash
yarn test --passWithNoTests
```

All tests must pass before committing

### 3. Snapshot Verification

```bash
git diff --name-only --cached | grep -E '\.snap$'
```

Review any snapshot changes carefully

### 4. Lint Check

```bash
npx nx run-many --all --target=lint --parallel
```

Fix all linting errors before committing

## Complete Pre-commit Script

```bash
#!/bin/bash

# 1. Format check
npx nx format:check
if [ $? -ne 0 ]; then
  echo "❌ Format check failed. Run 'npx nx format:write' to fix."
  exit 1
fi

# 2. Tests
yarn test --passWithNoTests
if [ $? -ne 0 ]; then
  echo "❌ Tests failed. Fix failing tests before committing."
  exit 1
fi

# 3. Snapshot check
git diff --name-only --cached | grep -E '\.snap$'
if [ $? -eq 0 ]; then
  echo "⚠️  Snapshot files detected. Review changes carefully."
  echo "Updated snapshots:"
  git diff --name-only --cached | grep -E '\.snap$'
fi

# 4. Lint check
npx nx run-many --all --target=lint --parallel
if [ $? -ne 0 ]; then
  echo "❌ Lint failed. Fix linting errors before committing."
  exit 1
fi

echo "✅ All pre-commit checks passed!"
```

## Quality Standards

- No linting errors allowed
- All tests must pass
- Code must be properly formatted
- Snapshot changes must be intentional and reviewed
