name: Test, Build And Deploy to Qovery

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      configuration:
        required: true
        type: string
      application-commit-id:
        required: true
        type: string
    secrets:
      organization-id:
        required: true
      project-name:
        required: true
      environment-name:
        required: true
      application-names:
        required: true
      api-token:
        required: true

# Define a concurrency group at the branch level for the current workflows.
# Trigerred workflow will be queued and cancel the previous ones.
concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_BRANCH: ${{ github.head_ref }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-${{ hashFiles('yarn.lock') }}
      - name: Setup Node
        uses: actions/setup-node@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 16
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Start Nx Agents
        run: yarn nx-cloud start-ci-run

  nx:
    name: Nx Commands
    runs-on: ubuntu-latest
    needs: [install-deps]
    strategy:
      fail-fast: false
      matrix:
        target: [test, build]
    steps:
      - name: Checkout [${{ inputs.branch }}]
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: szenius/set-timezone@v1.0
        name: Change timezone
        with:
          timezoneLinux: 'Europe/Paris'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-${{ hashFiles('yarn.lock') }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ inputs.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Nx Affected
        run: yarn nx affected --target=${{ matrix.target }} --parallel --max-parallel=3 --configuration=${{ inputs.configuration }}
  deploy:
    name: Deploy to Qovery
    runs-on: ubuntu-latest
    needs: [nx]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy on Qovery
        uses: Qovery/qovery-action@v0.10
        id: qovery
        with:
          qovery-organization-id: ${{ inputs.organization-id }}
          qovery-environment-name: ${{ inputs.environment-name }}
          qovery-project-name: ${{ inputs.project-name }}
          qovery-application-names: ${{ inputs.application-name }}
          qovery-application-commit-id: ${{ inputs.application-commit-id }}
          qovery-api-token: ${{ secrets.api-token }}

  stop_agents:
    name: Stop Agents
    runs-on: ubuntu-latest
    if: always()
    needs: [nx]
    steps:
      - name: Checkout [${{ inputs.branch }}]
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-${{ hashFiles('yarn.lock') }}
      - run: yarn nx-cloud stop-all-agents

  agents:
    runs-on: ubuntu-latest
    needs: [install-deps]
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-${{ hashFiles('yarn.lock') }}
      - name: Start Nx Agent ${{ matrix.agent }}
        run: yarn nx-cloud start-agent
