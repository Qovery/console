name: Test, Build And Deploy to Qovery

on:
  workflow_call:
    inputs:
      flow:
        required: true
        type: string
      branch:
        required: true
        type: string
      configuration:
        required: true
        type: string
      project-name:
        required: true
        type: string
      environment-name:
        required: true
        type: string
      application-names:
        required: true
        type: string
      application-commit-id:
        required: true
        type: string
    secrets:
      organization-id:
        required: true
      api-token:
        required: true

# Define a concurrency group at the branch level for the current workflows..
# Trigerred workflow will be queued and cancel the previous ones.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  nx-main:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.0
    with:
      # NOTE: Here we are using the special `nx-cloud record` command to ensure that any commands we run that do not go through the cloud task runner natively
      # (i.e. anything that starts with `nx run`/`nx run-many`/`nx affected --target`), are still captured in the Nx Cloud UI and Github App comment for
      # easier troubleshooting. See more here: https://nx.dev/nx-cloud/set-up/record-commands#recording-non-nx-commands
      parallel-commands: |
        npx nx-cloud record -- npx nx format:check
      parallel-commands-on-agents: |
        npx nx affected --target=test --parallel=3 --configuration=${{ inputs.configuration }} --ci --code-coverage --coverageReporters=lcov --silent
        npx nx build --parallel=3
      artifacts-path: |
        dist/
        coverage
      artifacts-name: dist-and-coverage-artifacts

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.13.0
    with:
      number-of-agents: 3

  codecoverage:
    runs-on: ubuntu-latest
    name: Code Coverage
    needs: ['nx-main']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist-and-coverage-artifacts
          path: coverage
      - name: Display structure of downloaded files
        run: ls -R
      - uses: codecov/codecov-action@v3
        with:
          directory: ./coverage/coverage
          flags: unittests # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)

  deploy:
    name: Deploy to Qovery
    runs-on: ubuntu-latest
    needs: [nx-main]
    if: ${{ inputs.flow != 'pull-request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy on Qovery
        uses: Qovery/qovery-action@v0.14.7
        id: qovery
        with:
          qovery-organization-id: ${{ secrets.organization-id }}
          qovery-project-name: ${{ inputs.project-name }}
          qovery-environment-name: ${{ inputs.environment-name }}
          qovery-application-names: ${{ inputs.application-names }}
          qovery-application-commit-id: ${{ inputs.application-commit-id }}
          qovery-api-token: ${{ secrets.api-token }}
