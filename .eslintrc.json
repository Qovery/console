{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx"],
  "extends": ["plugin:storybook/recommended"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": ["store"],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": true
          }
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": "error"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript", "plugin:@tanstack/eslint-plugin-query/recommended"],
      "rules": {
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "fixStyle": "inline-type-imports"
          }
        ],
        "@typescript-eslint/no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "react",
                "importNames": ["default"],
                "message": "React should be destructured.",
                "allowTypeImports": false
              },
              {
                "name": "@testing-library/react",
                "importNames": ["render", "screen"],
                "message": "Use `renderWithProviders`, `render` and `screen` from the `@qovery/shared/util-tests` package.",
                "allowTypeImports": false
              },
              {
                "name": "@testing-library/user-event",
                "importNames": ["default"],
                "message": "Destructure `userEvent` exposed by the `renderWithProviders` function from the `@qovery/shared/util-tests` package."
              },
              {
                "name": "@uidotdev/usehooks",
                "message": "Use imports from `@qovery/shared/util-hooks` instead of direct imports from `@uidotdev/usehooks`."
              },
              {
                "name": "ansi-to-react",
                "importNames": ["default"],
                "message": "Use `Ansi` from the `@qovery/shared/ui` package.",
                "allowTypeImports": false
              },
              {
                "name": "tailwind-merge",
                "importNames": ["twMerge"],
                "message": "Use `twMerge` from the `@qovery/shared/util-js` package.",
                "allowTypeImports": false
              },
              {
                "name": "cronstrue",
                "importNames": ["default"],
                "message": "Use `formatCronExpression` from the `@qovery/shared/util-js` package.",
                "allowTypeImports": false
              }
            ]
          }
        ],
        "no-restricted-imports": [
          "warn",
          {
            "paths": [
              {
                "name": "__tests__/utils/setup-jest",
                "importNames": ["render", "screen"],
                "message": "Use `renderWithProviders`, `render` and `screen` from the `@qovery/shared/util-tests` package."
              },
              {
                "name": "@testing-library/react",
                "importNames": ["fireEvent"],
                "message": "Prefer `userEvent` exposed by the `renderWithProviders` function from the `@qovery/shared/util-tests` package."
              },
              {
                "name": "__tests__/utils/setup-jest",
                "importNames": ["fireEvent"],
                "message": "Prefer `userEvent` exposed by the `renderWithProviders` function from the `@qovery/shared/util-tests` package."
              }
            ]
          }
        ],
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
      "extends": ["plugin:jest/recommended", "plugin:jest-dom/recommended"],
      "env": {
        "jest": true
      },
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "files": ["*.tsx", "*.jsx"],
      "plugins": ["react"],
      "rules": {
        "react/jsx-curly-brace-presence": "error",
        "react/jsx-key": "error"
      }
    }
  ]
}
